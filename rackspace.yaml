schema-version: 1.0.0
application-family: Analytics
application-name: Graphite
application-version: latest
flavor: Single Linux server
flavor-weight: 1
reach-info:
  icon-20x20: https://0b5294b243620310a700-e388a7f3aba385a925111b1fc6f680d4.ssl.cf2.rackcdn.com/blueprint-generic-whitespace-20x20.png
hidden_outputs:
  - private_key
  - graphite_password
abstract: |
  Graphite is software which allows numeric, time-series data to be stored and
  visualised as graphs.
instructions: |
  #### Getting Started
  If you are new to Graphite the [Graphite
  Overview](http://graphite.readthedocs.org/en/latest/overview.html) page
  provides a good description of what Graphite is and what it is not. A good
  writeup on
  [StatsD](http://codeascraft.com/2011/02/15/measure-anything-measure-everything/)
  is provided by the guys that wrote it.

  #### Accessing Your Deployment
  Navigate to the IP of the server you've created in a browser. Use the login
  of `root` and the `graphite_password` provided in the outputs section.

  #### Logging In via SSH
  The private key provided in the passwords section can be used to login as
  root via SSH. We have an article on how to use these keys with [Mac OS X and
  Linux](http://www.rackspace.com/knowledge_center/article/logging-in-with-a-ssh-private-key-on-linuxmac)
  as well as [Windows using
  PuTTY](http://www.rackspace.com/knowledge_center/article/logging-in-with-a-ssh-private-key-on-windows).

  #### Details of Your Setup
  The deployment was stood up using
  [chef-solo](http://docs.opscode.com/chef_solo.html). Once the deployment is
  up, chef will not run again, so it is safe to modify configurations.

  The Graphite Webapp runs under Apache as WSGI module on the standard HTTP TCP
  port of 80. The webapp provides the graphing UI, a simple dashboard, as well
  as an API to get stored metrics out. It draws graphs with times in the UTC
  timezone. You can change the timezone by modifying the
  /opt/graphite/webapp/graphite/local_settings.py file and restarting Apache.
  You can login to the Webapp using the user `root` and the `graphite_password`
  supplied in the outputs section.

  Carbon is a Graphite backend server process that accepts time-series data on
  TCP port 2003. Carbon can be configured via the
  /opt/graphite/conf/carbon.conf file. Carbon uses Whisper to store the data on
  disk which is configured to store data at 1 minute intervals for 3 months and
  after three months the data is averaged into 5 minute intervals for 2 years.
  The default storage schema can be changed or added to in the
  /opt/graphite/conf/storage-schema.conf file.

  [Statsd](https://github.com/etsy/statsd/) is a network daemon that sits along
  side Graphite also listening for metrics to be written to it on UDP port
  8125. It writes its aggregated metrics to the local Graphite Carbon backend.
  It's configuration can be customized in the /etc/statsd/config.js file.
user-input-required: true
description: |
  Single Linux server running
  [Graphite 0.9.12](http://graphite.readthedocs.org) and
  [StatsD](https://github.com/etsy/statsd/).
